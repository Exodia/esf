// Name:            CSS Grid
// Description:     Defines styles for CSS grid
//
// Component:       `ui-g`
//
// Mixins:          `.make-grid(@grid-columns)`
//                  `.make-grid(@grid-columns, @class)`
//
// Markup:
//
// <div class="ui-g">
//     <button class="ui-offset-1-5 ui-u-1-5"></button>
//     <button class="ui-u-4-5"></button>
// </div>
//
// ========================================================================

.@{ui-class-prefix}g {
    letter-spacing: -0.31em; /* Webkit: collapse white-space between units */
    *letter-spacing: normal; /* reset IE < 8 */
    *word-spacing: -0.43em; /* IE < 8: collapse white-space between units */
    text-rendering: optimizespeed; /* Webkit: fixes text-rendering: optimizeLegibility */

    /*
    Sets the font stack to fonts known to work properly with the above letter
    and word spacings. See: https://github.com/yui/pure/issues/41/

    The following font stack makes Pure Grids work on all known environments.

    * FreeSans: Ships with many Linux distros, including Ubuntu

    * Arimo: Ships with Chrome OS. Arimo has to be defined before Helvetica and
      Arial to get picked up by the browser, even though neither is available
      in Chrome OS.

    * Droid Sans: Ships with all versions of Android.

    * Helvetica, Arial, sans-serif: Common font stack on OS X and Windows.
    */
    font-family: FreeSans, Arimo, "Droid Sans", Helvetica, Arial, sans-serif;

    /*
    Use flexbox when possible to avoid `letter-spacing` side-effects.

    NOTE: Firefox (as of 25) does not currently support flex-wrap, so the
    `-moz-` prefix version is omitted.
    */

    display: -webkit-flex;
    -webkit-flex-flow: row wrap;

    /* IE10 uses display: flexbox */
    display: -ms-flexbox;
    -ms-flex-flow: row wrap;
}

/* Opera as of 12 on Windows needs word-spacing.
   The ".opera-only" selector is used to prevent actual prefocus styling
   and is not required in markup.
*/
.opera-only :-o-prefocus,
.@{ui-class-prefix}g {
    word-spacing: -0.43em;
}

// shortcuts
.@{ui-class-prefix}u,
.@{ui-class-prefix}u-1,
.@{ui-class-prefix}u-golden-ratio,
.@{ui-class-prefix}u-golden-ratio-1
 {
    &:extend(.esf-grid-u all);
}

.@{ui-class-prefix}u-1 {
    width: 100%;
}

.@{ui-class-prefix}u-golden-ratio {
    width: 61.8%;
}

.@{ui-class-prefix}u-golden-ratio-1 {
    width: 38.2%;
}

// custom grid.
.make-grid(2);
.make-grid(3);
.make-grid(4);
.make-grid(24);

.make-grid(5);

.esf-grid-u {
    display: inline-block;
    *display: inline;
    zoom: 1;
    letter-spacing: normal;
    word-spacing: normal;
    vertical-align: top;
    text-rendering: auto;
    font-family: @default-font-family;
}

.make-grid(@grid-columns) {
  .loop-grid-columns(@grid-columns, false, @grid-columns);
}

.make-grid(@grid-columns, @class) {
  .loop-grid-columns(@grid-columns, @class, @grid-columns);
}

// Mixins
// Basic looping in LESS
.loop-grid-columns(@index, @class, @total) when (@index >= 0) {
  ._calc-grid-column(@index, @class, @total);
  // next iteration
  .loop-grid-columns((@index - 1), @class, @total);
}

._calc-grid-column(@index, @class, @total) when (isstring(@class)) and (@index > 0) {
    @width: (@index / @grid-columns);
    @ie-width: (@width - 0.00031);
    .@{ui-class-prefix}u-@{class}-@{index}-@{total} {
        width: percentage(@width);
        // IE < 8 has issues with rounding, reducing the width slightly prevents the
        // grid units from wrapping to the next line.
        *width: percentage(ie-width);
        &:extend(.esf-grid-u all);
    }
    .@{ui-class-prefix}offset-@{class}-@{index}-@{total} {
        margin-left: percentage(@width);
        *margin-left: percentage(ie-width);
    }
}

._calc-grid-column(@index, @class, @total) when (@index > 0) {
    @width: (@index / @grid-columns);
    @ie-width: (@width - 0.00031);
    .@{ui-class-prefix}u-@{index}-@{total} {
        width: percentage(@width);
        // IE < 8 has issues with rounding, reducing the width slightly prevents the
        // grid units from wrapping to the next line.
        *width: percentage(@ie-width);
        &:extend(.esf-grid-u all);
    }
    .@{ui-class-prefix}offset-@{index}-@{total} {
        margin-left: percentage(@width);
        *margin-left: percentage(ie-width);
    }
}